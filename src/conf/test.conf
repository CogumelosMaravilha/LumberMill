- GambolPutty:
  default_pool_size: 3
  default_queue_size: 20

# Some useful default modules
# Drop events.
- module: DevNullSink

# Print statistics.
- module: Statistics
  interval: 10

# Print events to stdout.
- module: StdOutSink
  pretty_print: True

#- module: RedisClient
#  cluster: {'es-01.dbap.de': 'es-02.dbap.de'}

- module: WebserverTornado
  port: 5153

# Cluster.
- module: Cluster
  name: ElasticSearchDbap
  pack: leader
  secret: jdsjd948574eifjIGUDGZIA/etr3

- module: ClusterConfiguration
  ignore_modules: [StdOutSink]
  interval: 10

#- module: WebGui

# A simple TCP Server.
- module: TcpServerTornado
  tls: False
  key: /opt/dev/src/exampleData/gambolputty_ca.key
  cert: /opt/dev/src/exampleData/gambolputty_ca.crt
  receivers:
    - DevNullSink

#- module: RedisChannel
#  channel: GambolPutty
#  server: es-01.dbap.de
#  receivers:
#    - RegexParser
#    - Statistics

#- module: RedisList
#  pool_size: 3
#  lists: ['beaver:gambolputty']
#  server: es-01.dbap.de
#  receivers:
#    - MsgPackParser
#    - Statistics

#- module: MsgPackParser
#  source_field: data
#  receivers:
#    - RegexParser

#- module: JsonParser
#  source_field: data
#  receivers:
#    - RegexParser

# Parse the message using named regex patterns.
# The named groups will be put into corresponding fields in the data dictionary
#- module: RegexParser
#  source_field: '@message'
#  field_extraction_patterns:
#    #agora_access_log: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\._\-]+)\s+nginx: agora (?P<request_ts>\d+\.\d+).*\s(?P<server_name>[\w\._\-]+)\s(?P<http_method>[\w\-]+)\s\"(?P<uri>.*)\"\s\"(?P<request_body>.*)\"\s(?P<username>[\w\-]+)\s(?P<http_status>\d+)\s(?P<bytes_sent>\d+)\s(?P<request_size>\d+)\s(?P<request_time>[\d\.]+)\s(?P<remote_ip>[\d\.]+)\s(?P<remote_port>\d+)\s\"(?P<x_forwarded_for>.*)\"\s\"(?P<referer>.*)\"\s\"(?P<user_agent>.*)\"\s(?P<cache_status>[\w\-]+)\s\"(?P<upstream_response_time>.*)\"\s\"(?P<upstream_addr>.*)\"\s\"(?P<content_type>.*)\"\s\"(?P<accept_encoding>.*)\"\s\"(?P<content_encoding>.*)\"\s\"(?P<custom_vars>.*)'
#    httpd_access_log: '(?P<syslog_prival>\<\d+\>)?(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\._\-]+)\s+(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\s+(?P<identd>\w+|-)\s+(?P<user>\w+|-)\s+\[(?P<datetime>\d+\/\w+\/\d+:\d+:\d+:\d+\s.\d+)\]\s+\"(?P<url>.*)\"\s+(?P<http_status>\d+)\s+(?P<bytes_send>\d+)'
#  receivers:
#    - SyslogPrivalParser
#    - Statistics

#- module: SyslogPrivalParser
#  source_field: syslog_prival
#  receivers:
#    - AddDateTime

#- module: AddDateTime
#  target_field: '@timestamp'
#  format: '%Y-%m-%dT%H:%M:%S.%f'
#  receivers:
#    - ElasticSearchSink

#- module: AddGeoInfo
#  geoip_dat_path: /opt/dev/src/exampleData/GeoIP.dat
#  geoip_dat_path: ../exampleData/GeoIP.dat
#  source_fields: [x_forwarded_for, remote_ip]
#  receivers:
#    - StdOutSink

#- module: ElasticSearchSink
#  connection_type: http
#  nodes: ["es-01.dbap.de"] #["es-01.dbap.de:9200"]
#  index_name: 1perftests
#  store_interval_in_secs: 2
#  max_waiting_events: 500
#  doc_id: '@timestamp'
#  consistency: one
#  replication: async

#- module: Spam
#  pool_size: 1
#  event: {'Lobster': 'Thermidor', 'Truffle': 'Pate'}
#  receivers:
#    - AddDateTime