# A handler for stin, just for testing purposes.
#- module: StdInHandler
#  receivers:
#    - RegexParser

# A simple TCP Server.
- module: TcpServerTornado
  configuration:
    port: 5151
  receivers:
    - RegexParser

# Parse the messege using named regex patterns.
# The named groups will be put into correspondig fields in the data dictionary.
- module: RegexParser
  configuration:
    field_extraction_patterns:
      httpd_access_log: '(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\s+(?P<identd>\w+|-)\s+(?P<user>\w+|-)\s+\[(?P<datetime>\d+\/\w+\/\d+:\d+:\d+:\d+\s.\d+)\]\s+\"(?P<url>.*)\"\s+(?P<http_status>\d+)\s+(?P<bytes_send>\d+)'
      #http_common_access_log: '(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\s(?P<x_forwarded_for>\d+\.\d+\.\d+\.\d+)\s(?P<identd>\w+|-)\s(?P<user>\w+|-)\s\[(?P<datetime>\d+\/\w+\/\d+:\d+:\d+:\d+\s.\d+)\]\s\"(?P<url>.*)\"\s(?P<http_status>\d+)\s(?P<bytes_send>\d+)'
  receivers:
    # Only messages that matched a regex will be send to this handler
    - AddDateTime:
        filter: event_type != 'unknown'
    # Print out messages that did not match
    - StdOutHandler:
        filter: event_type == 'unknown'

# Add a timestamp field.
- module: AddDateTime
  configuration:
    format: '%Y-%m-%dT%H:%M:%S.%f'
    target_field: "@timestamp"
  receivers:
    - AddGeoInfo

# Add geo info based on the lookup_fields. The first field in <source_fields> that yields a result from geoip will be used.
- module: AddGeoInfo
  configuration:
    geoip_dat_path: /usr/share/GeoIP/GeoLiteCity.dat
    source_fields: [x_forwarded_for, remote_ip]
  receivers:
    - ElasticSearchOutput
    - Statistics

- module: ElasticSearchOutput
  configuration:
    nodes: ["localhost:9200"]
    doc_id: '%(@timestamp)s%(received_from)s'
    store_interval_in_secs: 2

- module: Statistics
- module: StdOutHandler
