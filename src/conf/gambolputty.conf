# A handler for stin, just for testing purposes
#- module: StdInHandler
#  receivers:
#    - RegexParser

# A simple TCP Server
- module: TcpServerThreaded
  configuration:
    interface: es-02.dbap.de
    port: 5152
  receivers:
    - RegexParser

# Parse the messege using named regex patterns.
# The named groups will be put into corresponding fields in the data dictionary
- module: RegexParser
  configuration:
    source-field: data
    field-extraction-patterns:
      httpd_access_log: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+(apache2|nginx): httpd\[(?P<pid>\d+)\]\s+(?P<virtual_host_name>.*)\s+(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\s+(?P<request_time>[\d\.]+)\s+\"(?P<http_method>GET|POST)\s+(?P<uri>.*) HTTP/.*?\"\s+(?P<http_status>-|\d+)\s+(?P<bytes_sent>-|\d+)\s+(?P<cookie_sid>\S+)\s+(?P<cookie_unique_id>\S+)\s+\"(?P<referer>.*)\"\s+\"(?P<user_agent>.*)\"'
      agora_access_log: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\._\-]+)\s+nginx: agora (?P<request_ts>\d+\.\d+).*\s(?P<server_name>[\w\._\-]+)\s(?P<http_method>[\w\-]+)\s\"(?P<uri>.*)\"\s\"(?P<request_body>.*)\"\s(?P<username>[\w\-]+)\s(?P<http_status>\d+)\s(?P<bytes_sent>\d+)\s(?P<request_size>\d+)\s(?P<request_time>[\d\.]+)\s(?P<remote_ip>[\d\.]+)\s(?P<remote_port>\d+)\s\"(?P<x_forwarded_for>.*)\"\s\"(?P<referer>.*)\"\s\"(?P<user_agent>.*)\"\s(?P<cache_status>[\w\-]+)\s\"(?P<upstream_response_time>.*)\"\s\"(?P<upstream_addr>.*)\"\s\"(?P<content_type>.*)\"\s\"(?P<accept_encoding>.*)\"\s\"(?P<content_encoding>.*)\"\s\"(?P<custom_vars>.*)'
      httpd_log_phperrors: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+httpd\[(?P<pid>\d+)\]:?\s(\[(?P<status>\w+)\]\s+)?\[client\s+(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\]\s+PHP (?P<php_error_type>Warning|Notice|Fatal error):\s+(?P<php_error_message>.*)'
      php_fpm_log_errors: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+php-fpm\[(?P<pid>\d+)\]:?\s\[(?P<php_error_type>\w+)\]\s+\[pool\s(?P<php_fpm_poolname>[\w\-\._\s]+)\]\s+(?P<php_error_message>.*)'
      httpd_log_errors: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+httpd\[(?P<pid>\d+)\]:?\s\[(?P<status>\w+)\]\s+\[client\s+(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\]\s+(?P<httpd_error_message>.*)'
      webservice_access_log: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+daemontools\.(?P<service_name>\w+):.*\t(?P<remote_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s-\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s+\d+\s+(?P<http_method>\w+)\s+(?P<uri>/\sVersion.*)\s+(?P<http_status>\d{1,3})\s+(?P<bytes_sent>-|\d+)\s+-\s+(?P<request_time>\d+)\t(?P<user_agent>.*)\t(?P<referer>.*)'
      flow_digest_log: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+flow-digest:\sSource:(?P<remote_ip>\d+\.\d+\.\d+\.\d+)\sDestination:(?P<destination_ip>\d+\.\d+\.\d+\.\d+)\sFlowCount:(?P<flow_count>\d+)\sOctets:(?P<octets>\d+)\sPackets:(?P<packets>\d+)\sBlockThreshold:(?P<block_threshold>\d+)\sBlockStatus:(?P<block_status>\w+)'
      iptables: '(?P<log_timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<host>[\w\-\._]+)\s+kernel:.*?\ iptables\ (?P<iptables_action>.*?)\ :\ IN=(?P<iptables_in_int>.*?)\ OUT=(?P<iptables_out_int>.*?)\ SRC=(?P<iptables_src>.*?)\ DST=(?P<iptables_dst>.*?)\ LEN=(?P<iptables_len>.*?)\ .*?PROTO=(?P<iptables_proto>.*?)\ SPT=(?P<iptables_spt>.*?)\ DPT=(?P<iptables_dpt>.*?)\ WINDOW=.*'
  receivers:
    - ModuleContainer

# Normal handlers will always run in their own thread and need an input and output queue.
# To avoid this overhead for simple tasks, wrap them up in a container.
- module: ModuleContainer
  configuration:
    # Add a timestamp field
    - module: AddDateTime
      configuration:
        target-field: "@timestamp"
    # Add geo info based on the lookup_fields. The first field in the that yields a result from geoip will be used.
    - module: AddGeoInfo
      configuration:
        geoip-dat-path: exampleData/GeoIP.dat
        source-fields: [x_forwarded_for, remote_ip]
    - module: ModifyFields
      configuration:
        action: castToInteger
        source-fields: [http_status, bytes_sent, pid, remote_port, request_time, request_size, TreeNodeID]
    - module: ModifyFields
      configuration:
        action: castToFloat
        source-fields: [upstream_response_time]
    - module: ModifyFields
      configuration:
        action: map
        source-field: http_status
        map: {100: 'Continue', 200: 'OK', 301: 'Moved Permanently', 302: 'Found', 304: 'Not Modified', 400: 'Bad Request', 401: 'Unauthorized', 403: 'Forbidden', 404: 'Not Found', 500: 'Internal Server Error', 502: 'Bad Gateway'}
  receivers:
    - Statistics
    - ElasticSearchOutput
    - Agora-ModuleContainer:
        filter-by-field: uri

- module: ModuleContainer
  pool-size: 2
  alias: Agora-ModuleContainer
  configuration:
    - module: UrlParser
      configuration:
        source-field: uri
        work-on-copy: True
    - module: HttpRequest
      configuration:
        url: http://%(server_name)s/%(AccessKeyID)s/?Version=%(Version)s&AccessKeyID=%(AccessKeyID)s&Operation=GetItems&TreeNodeID=%(TreeNodeID)s&Template=ProductsWithoutUsedValues
        target-field: agora_product_xml
        redis-client: RedisClient
        redis-key: HttpRequest%(server_name)s%(TreeNodeID)s
        redis-ttl: 600
    - module: XPathParser
      configuration:
        source-field: agora_product_xml
        query: "//Item[1]/@NodeDescription"
        redis-client: RedisClient
        redis-key: XPathParser%(server_name)s%(TreeNodeID)s
        redis-ttl: 600
        target-field: TreeNodeID_mapped
    - module: ModifyFields
      configuration:
        action: keep
        source-fields: [ "@timestamp", remote_ip, message_type, server_name, virtual_host_name, cache_status, http_status_mapped, bytes_sent, data, host, upstream_response_time, Version, AccessKey, AccessKeyID, Operation, Artikelnummer, Template, TreeNodeID, TreeNodeID_mapped, XSLTs, Search ]
  receivers:
    - Agora-ES

# Add messages to ES
- module: ElasticSearchOutput
  pool-size: 4
  configuration:
    nodes: ["es-01.dbap.de:9200"]

# Add messages to ES
- module: ElasticSearchOutput
  alias: Agora-ES
  pool-size: 4
  configuration:
    nodes: ["es-01.dbap.de:9200"]
    index-prefix: agora_access-

- module: Statistics

- module: StdOutHandler

- module: RedisClient
  configuration:
    server: es-01.dbap.de

#- module: DevNullSink